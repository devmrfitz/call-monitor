/**
* MIT License
* Copyright (c) 2021 Fonoster Inc
*
* The Users proto contains the artificats for the administration
* of Users.
*/
syntax = "proto3";

package fonoster.projects.v1beta1;

option go_package = "github.com/fonoster/fonoster/mods/users/fonoster/services/protos/users";

import "protoc-gen-openapiv2/options/annotations.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "common.proto";

service Projects {
  // Lists all the Projects for a given User
  rpc ListProjects (ListProjectsRequest) returns (ListProjectsResponse) {
    option (google.api.http) = { get: "/v1beta1/projects" };
  };  
  // Creates a new Project resource
  rpc CreateProject (CreateProjectRequest) returns (Project) {
    option (google.api.http) = { 
      post: "/v1beta1/projects"
      body: "*"
    };
  };
  // Updates a given Project
  rpc UpdateProject (UpdateProjectRequest) returns (Project) {
    option (google.api.http) = { 
      put: "/v1beta1/projects/{ref}"
      body: "*"
    };
  };
  // Gets a Project by AccessKeyId
  rpc GetProject (GetProjectRequest) returns (Project) {
    option (google.api.http) = { get: "/v1beta1/projects/{ref}" };
  };
  // WARNING: Hard delete of a Project will remove all related resources 
  rpc DeleteProject (DeleteProjectRequest) returns (fonoster.common.v1beta1.Empty) {
    option (google.api.http) = { delete: "/v1beta1/projects/{ref}" };
  };
  // Regenerates the accessKeySecret
  rpc RenewAccessKeySecret (RenewAccessKeySecretRequest) returns (RenewAccessKeySecretResponse) {
    option (google.api.http) = { get: "/v1beta1/projects/{ref}/credentials" };
  };
}

message ListProjectsRequest {
}

message ListProjectsResponse {
  repeated Project projects = 1;
}

message CreateProjectRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    example: "{\"name\": \"Acme Corp\"}"
  };
  string name = 1 [(google.api.field_behavior) = REQUIRED];
  bool allow_experiments = 2; 
}

message UpdateProjectRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    example: "{\"name\": \"Acme Corp 2\", \"allowExperiments\": true}"
  };
  // Project's reference
  string ref = 1;
  string name = 2;
  bool allow_experiments = 3 [(google.api.field_behavior) = REQUIRED];
}

message GetProjectRequest {
  // Project's reference
  string ref = 1;
}

message DeleteProjectRequest {
  // Project's reference
  string ref = 1;
}

message RenewAccessKeySecretRequest {
  // Project's reference
  string ref = 1;
}

message RenewAccessKeySecretResponse {
  string access_key_secret = 1;
}

message Project {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    example: "{\"ref\": \"507f191e810c19729de860ea\", \"userRef\": \"057d191e810c19563de45767\", \"name\": \"Acme Main\", \"accessKeyId\": \"507f191e810c19729de860ea\", \"accessKeySecret\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\", \"allowExperiments\": false, \"createTime\": \"2021-10-05T13:23:07.221Z\", \"updateTime\": \"2021-10-05T13:23:07.221Z\"}"
  };
  string name = 1 [(google.api.field_behavior) = REQUIRED];
  // Project's reference
  string ref = 2 [(google.api.field_behavior) = REQUIRED];
  string user_ref = 3 [(google.api.field_behavior) = REQUIRED];
  string access_key_id = 4 [(google.api.field_behavior) = REQUIRED];
  string access_key_secret = 5 [(google.api.field_behavior) = REQUIRED];
  bool allow_experiments = 6;
  string create_time = 7 [(google.api.field_behavior) = OUTPUT_ONLY];
  string update_time = 8 [(google.api.field_behavior) = OUTPUT_ONLY];
}
