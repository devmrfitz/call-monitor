/**
 * MIT License
 * Copyright (c) 2021 Fonoster Inc
 *
 * The Storage proto contains the artificats for bucket and objects
 * management.
 */
syntax = "proto3";

package fonoster.storage.v1beta1;

option go_package = "github.com/fonoster/fonoster/mods/storage/fonoster/services/protos/storage";

import "google/api/annotations.proto";

service Storage {
  rpc UploadObject (stream UploadObjectRequest) returns (UploadObjectResponse) {};
  rpc GetObjectURL (GetObjectURLRequest) returns (GetObjectURLResponse) {
    option (google.api.http) = { get: "/v1beta1/storage/{bucket}/{filename}" };
  };
}

message UploadObjectRequest {
  enum Bucket {
    APPS = 0;
    RECORDINGS = 1;
    PUBLIC = 2;
  }    
  Bucket bucket = 1;
  string filename = 2;
  bytes chunks = 3;
  string access_key_id = 4;
  map <string, string> metadata = 5;
}

message UploadObjectResponse {
  // File size in bytes
  int32 size = 1;
}

message GetObjectURLRequest {
  enum Bucket {
    APPS = 0;
    RECORDINGS = 1;
    PUBLIC = 2;
  }    
  Bucket bucket = 1;
  string filename = 2;
  string access_key_id = 3;
}

message GetObjectURLResponse {
  string url = 1;
}
