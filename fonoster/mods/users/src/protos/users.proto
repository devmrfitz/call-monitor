/**
* MIT License
* Copyright (c) 2021 Fonoster Inc
*
* The Users proto contains the artificats for the administration
* of Users.
*/
syntax = "proto3";

package fonoster.users.v1beta1;

option go_package = "github.com/fonoster/fonoster/mods/users/fonoster/services/protos/users";

import "protoc-gen-openapiv2/options/annotations.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "common.proto";

service Users {
  // Lists all the Users you have access to
  rpc ListUsers (ListUsersRequest) returns (ListUsersResponse) {
    option (google.api.http) = { get: "/v1beta1/users" };
  };    
  // Creates a new User resource
  rpc CreateUser (CreateUserRequest) returns (User) {
    option (google.api.http) = { 
      post: "/v1beta1/users"
      body: "*"
    };
  };
  // Gets User by reference
  rpc GetUser (GetUserRequest) returns (User) {
    option (google.api.http) = { get: "/v1beta1/users/{ref}" };
  };
  // Change or update fields in a resource
  rpc UpdateUser (UpdateUserRequest) returns (User) {
    option (google.api.http) = { 
      put: "/v1beta1/users/{ref}"
      body: "*"
    };
  };
  // WARNING: Hard delete of an User will remove all related projects and its resources. 
  rpc DeleteUser (DeleteUserRequest) returns (fonoster.common.v1beta1.Empty) {
    option (google.api.http) = { delete: "/v1beta1/users/{ref}" };
  };
  // Creates a set of credentials
  rpc CreateUserCredentials (CreateUserCredentialsRequest) returns (CreateUserCredentialsResponse) {
    option (google.api.http) = { 
      post: "/v1beta1/users/credentials"
      body: "*"
    };
  };
}

message ListUsersRequest {
  map <string, string> filters = 1;
}

message ListUsersResponse {
  repeated User users = 1;
}

message CreateUserCredentialsRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    example: "{\"email\": \"john.doe@fonoster.io\", \"secret\": \"$U@tl0125\", \"expiration\": \"7d\"}"
  };
  string email = 1; 
  string secret = 2;
  string expiration = 3;
}

message CreateUserCredentialsResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    example: "{\"accessKeyId\": \"407f1679010c19729de860rp\", \"accessKeySecret\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"}"
  };
  string access_key_id = 1;
  string access_key_secret = 2;
}

message CreateUserRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    example: "{\"email\": \"john.doe@fonoster.io\", \"name\": \"John Doe\", \"secret\": \"$U@tl0125\", \"avatar\": \"https://avatar.net/0121323/image.jpg\"}"
  };
  string email = 1 [(google.api.field_behavior) = REQUIRED];
  string name = 2 [(google.api.field_behavior) = REQUIRED];
  string secret = 3 [(google.api.field_behavior) = REQUIRED];
  // Url to the User's avatar
  string avatar = 4;
}

message UpdateUserRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    example: "{\"ref\": \"407f1679010c19729de860rp\", \"name\": \"John Doe\", \"avatar\": \"https://avatar.net/0121323/image.jpg\"}"
  };
  // User's reference
  string ref = 1;
  string name = 2;
  string secret = 3;
  string avatar = 4;
  // Only an elevated user can change the user's status
  string status = 5;
  // Only an elevated user can change the user's limiter
  string limiter = 6;
}

message GetUserRequest {
  // User's reference
  string ref = 1;
}

message DeleteUserRequest {
  // User's reference
  string ref = 1;
}

message User {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    example: "{\"ref\": \"407f1679010c19729de860rp\", \"accessKeyId\": \"407f1679010c19729de860rp\", \"email\": \"john.doe@acme.com\", \"name\": \"John Doe\", \"avatar\": \"https://avatar.net/0121323/image.jpg\", \"createTime\": \"2021-10-05T13:23:07.221Z\", \"updateTime\": \"2021-10-05T13:23:07.221Z\"}"
  };
  // User's reference  
  string ref = 1 [(google.api.field_behavior) = REQUIRED];
  string access_key_id = 2 [(google.api.field_behavior) = REQUIRED];
  string email = 3 [(google.api.field_behavior) = REQUIRED];
  string name = 4 [(google.api.field_behavior) = REQUIRED];
  string avatar = 5;
  string create_time = 6 [(google.api.field_behavior) = OUTPUT_ONLY];
  string update_time = 7 [(google.api.field_behavior) = OUTPUT_ONLY];
  string status = 8;
  string limiter = 9;
}
