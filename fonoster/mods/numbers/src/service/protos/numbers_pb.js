// source: numbers.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var protoc$gen$openapiv2_options_annotations_pb = require('./protoc-gen-openapiv2/options/annotations_pb.js');
goog.object.extend(proto, protoc$gen$openapiv2_options_annotations_pb);
var google_api_annotations_pb = require('./google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_api_field_behavior_pb = require('./google/api/field_behavior_pb.js');
goog.object.extend(proto, google_api_field_behavior_pb);
var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
goog.exportSymbol('proto.fonoster.numbers.v1beta1.CreateNumberRequest', null, global);
goog.exportSymbol('proto.fonoster.numbers.v1beta1.DeleteNumberRequest', null, global);
goog.exportSymbol('proto.fonoster.numbers.v1beta1.GetIngressInfoRequest', null, global);
goog.exportSymbol('proto.fonoster.numbers.v1beta1.GetNumberRequest', null, global);
goog.exportSymbol('proto.fonoster.numbers.v1beta1.IngressInfo', null, global);
goog.exportSymbol('proto.fonoster.numbers.v1beta1.ListNumbersRequest', null, global);
goog.exportSymbol('proto.fonoster.numbers.v1beta1.ListNumbersResponse', null, global);
goog.exportSymbol('proto.fonoster.numbers.v1beta1.Number', null, global);
goog.exportSymbol('proto.fonoster.numbers.v1beta1.UpdateNumberRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fonoster.numbers.v1beta1.ListNumbersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fonoster.numbers.v1beta1.ListNumbersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fonoster.numbers.v1beta1.ListNumbersRequest.displayName = 'proto.fonoster.numbers.v1beta1.ListNumbersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fonoster.numbers.v1beta1.ListNumbersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.fonoster.numbers.v1beta1.ListNumbersResponse.repeatedFields_, null);
};
goog.inherits(proto.fonoster.numbers.v1beta1.ListNumbersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fonoster.numbers.v1beta1.ListNumbersResponse.displayName = 'proto.fonoster.numbers.v1beta1.ListNumbersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fonoster.numbers.v1beta1.CreateNumberRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fonoster.numbers.v1beta1.CreateNumberRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fonoster.numbers.v1beta1.CreateNumberRequest.displayName = 'proto.fonoster.numbers.v1beta1.CreateNumberRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fonoster.numbers.v1beta1.UpdateNumberRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fonoster.numbers.v1beta1.UpdateNumberRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fonoster.numbers.v1beta1.UpdateNumberRequest.displayName = 'proto.fonoster.numbers.v1beta1.UpdateNumberRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fonoster.numbers.v1beta1.GetNumberRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fonoster.numbers.v1beta1.GetNumberRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fonoster.numbers.v1beta1.GetNumberRequest.displayName = 'proto.fonoster.numbers.v1beta1.GetNumberRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fonoster.numbers.v1beta1.GetIngressInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fonoster.numbers.v1beta1.GetIngressInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fonoster.numbers.v1beta1.GetIngressInfoRequest.displayName = 'proto.fonoster.numbers.v1beta1.GetIngressInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fonoster.numbers.v1beta1.DeleteNumberRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fonoster.numbers.v1beta1.DeleteNumberRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fonoster.numbers.v1beta1.DeleteNumberRequest.displayName = 'proto.fonoster.numbers.v1beta1.DeleteNumberRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fonoster.numbers.v1beta1.Number = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fonoster.numbers.v1beta1.Number, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fonoster.numbers.v1beta1.Number.displayName = 'proto.fonoster.numbers.v1beta1.Number';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fonoster.numbers.v1beta1.IngressInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fonoster.numbers.v1beta1.IngressInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fonoster.numbers.v1beta1.IngressInfo.displayName = 'proto.fonoster.numbers.v1beta1.IngressInfo';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fonoster.numbers.v1beta1.ListNumbersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.fonoster.numbers.v1beta1.ListNumbersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fonoster.numbers.v1beta1.ListNumbersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.numbers.v1beta1.ListNumbersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pageSize: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pageToken: jspb.Message.getFieldWithDefault(msg, 2, ""),
    view: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fonoster.numbers.v1beta1.ListNumbersRequest}
 */
proto.fonoster.numbers.v1beta1.ListNumbersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fonoster.numbers.v1beta1.ListNumbersRequest;
  return proto.fonoster.numbers.v1beta1.ListNumbersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fonoster.numbers.v1beta1.ListNumbersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fonoster.numbers.v1beta1.ListNumbersRequest}
 */
proto.fonoster.numbers.v1beta1.ListNumbersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageToken(value);
      break;
    case 3:
      var value = /** @type {!proto.fonoster.common.v1beta1.View} */ (reader.readEnum());
      msg.setView(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fonoster.numbers.v1beta1.ListNumbersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fonoster.numbers.v1beta1.ListNumbersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fonoster.numbers.v1beta1.ListNumbersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.numbers.v1beta1.ListNumbersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getView();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional int32 page_size = 1;
 * @return {number}
 */
proto.fonoster.numbers.v1beta1.ListNumbersRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.fonoster.numbers.v1beta1.ListNumbersRequest} returns this
 */
proto.fonoster.numbers.v1beta1.ListNumbersRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string page_token = 2;
 * @return {string}
 */
proto.fonoster.numbers.v1beta1.ListNumbersRequest.prototype.getPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.numbers.v1beta1.ListNumbersRequest} returns this
 */
proto.fonoster.numbers.v1beta1.ListNumbersRequest.prototype.setPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional fonoster.common.v1beta1.View view = 3;
 * @return {!proto.fonoster.common.v1beta1.View}
 */
proto.fonoster.numbers.v1beta1.ListNumbersRequest.prototype.getView = function() {
  return /** @type {!proto.fonoster.common.v1beta1.View} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.fonoster.common.v1beta1.View} value
 * @return {!proto.fonoster.numbers.v1beta1.ListNumbersRequest} returns this
 */
proto.fonoster.numbers.v1beta1.ListNumbersRequest.prototype.setView = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.fonoster.numbers.v1beta1.ListNumbersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fonoster.numbers.v1beta1.ListNumbersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.fonoster.numbers.v1beta1.ListNumbersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fonoster.numbers.v1beta1.ListNumbersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.numbers.v1beta1.ListNumbersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    numbersList: jspb.Message.toObjectList(msg.getNumbersList(),
    proto.fonoster.numbers.v1beta1.Number.toObject, includeInstance),
    nextPageToken: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fonoster.numbers.v1beta1.ListNumbersResponse}
 */
proto.fonoster.numbers.v1beta1.ListNumbersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fonoster.numbers.v1beta1.ListNumbersResponse;
  return proto.fonoster.numbers.v1beta1.ListNumbersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fonoster.numbers.v1beta1.ListNumbersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fonoster.numbers.v1beta1.ListNumbersResponse}
 */
proto.fonoster.numbers.v1beta1.ListNumbersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.fonoster.numbers.v1beta1.Number;
      reader.readMessage(value,proto.fonoster.numbers.v1beta1.Number.deserializeBinaryFromReader);
      msg.addNumbers(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fonoster.numbers.v1beta1.ListNumbersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fonoster.numbers.v1beta1.ListNumbersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fonoster.numbers.v1beta1.ListNumbersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.numbers.v1beta1.ListNumbersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNumbersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.fonoster.numbers.v1beta1.Number.serializeBinaryToWriter
    );
  }
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated Number numbers = 1;
 * @return {!Array<!proto.fonoster.numbers.v1beta1.Number>}
 */
proto.fonoster.numbers.v1beta1.ListNumbersResponse.prototype.getNumbersList = function() {
  return /** @type{!Array<!proto.fonoster.numbers.v1beta1.Number>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.fonoster.numbers.v1beta1.Number, 1));
};


/**
 * @param {!Array<!proto.fonoster.numbers.v1beta1.Number>} value
 * @return {!proto.fonoster.numbers.v1beta1.ListNumbersResponse} returns this
*/
proto.fonoster.numbers.v1beta1.ListNumbersResponse.prototype.setNumbersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.fonoster.numbers.v1beta1.Number=} opt_value
 * @param {number=} opt_index
 * @return {!proto.fonoster.numbers.v1beta1.Number}
 */
proto.fonoster.numbers.v1beta1.ListNumbersResponse.prototype.addNumbers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.fonoster.numbers.v1beta1.Number, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.fonoster.numbers.v1beta1.ListNumbersResponse} returns this
 */
proto.fonoster.numbers.v1beta1.ListNumbersResponse.prototype.clearNumbersList = function() {
  return this.setNumbersList([]);
};


/**
 * optional string next_page_token = 2;
 * @return {string}
 */
proto.fonoster.numbers.v1beta1.ListNumbersResponse.prototype.getNextPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.numbers.v1beta1.ListNumbersResponse} returns this
 */
proto.fonoster.numbers.v1beta1.ListNumbersResponse.prototype.setNextPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fonoster.numbers.v1beta1.CreateNumberRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.fonoster.numbers.v1beta1.CreateNumberRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fonoster.numbers.v1beta1.CreateNumberRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.numbers.v1beta1.CreateNumberRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    providerRef: jspb.Message.getFieldWithDefault(msg, 1, ""),
    e164Number: jspb.Message.getFieldWithDefault(msg, 2, ""),
    aorLink: jspb.Message.getFieldWithDefault(msg, 3, ""),
    ingressInfo: (f = msg.getIngressInfo()) && proto.fonoster.numbers.v1beta1.IngressInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fonoster.numbers.v1beta1.CreateNumberRequest}
 */
proto.fonoster.numbers.v1beta1.CreateNumberRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fonoster.numbers.v1beta1.CreateNumberRequest;
  return proto.fonoster.numbers.v1beta1.CreateNumberRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fonoster.numbers.v1beta1.CreateNumberRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fonoster.numbers.v1beta1.CreateNumberRequest}
 */
proto.fonoster.numbers.v1beta1.CreateNumberRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProviderRef(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setE164Number(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAorLink(value);
      break;
    case 4:
      var value = new proto.fonoster.numbers.v1beta1.IngressInfo;
      reader.readMessage(value,proto.fonoster.numbers.v1beta1.IngressInfo.deserializeBinaryFromReader);
      msg.setIngressInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fonoster.numbers.v1beta1.CreateNumberRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fonoster.numbers.v1beta1.CreateNumberRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fonoster.numbers.v1beta1.CreateNumberRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.numbers.v1beta1.CreateNumberRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProviderRef();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getE164Number();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAorLink();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIngressInfo();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.fonoster.numbers.v1beta1.IngressInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string provider_ref = 1;
 * @return {string}
 */
proto.fonoster.numbers.v1beta1.CreateNumberRequest.prototype.getProviderRef = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.numbers.v1beta1.CreateNumberRequest} returns this
 */
proto.fonoster.numbers.v1beta1.CreateNumberRequest.prototype.setProviderRef = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string e164_number = 2;
 * @return {string}
 */
proto.fonoster.numbers.v1beta1.CreateNumberRequest.prototype.getE164Number = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.numbers.v1beta1.CreateNumberRequest} returns this
 */
proto.fonoster.numbers.v1beta1.CreateNumberRequest.prototype.setE164Number = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string aor_link = 3;
 * @return {string}
 */
proto.fonoster.numbers.v1beta1.CreateNumberRequest.prototype.getAorLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.numbers.v1beta1.CreateNumberRequest} returns this
 */
proto.fonoster.numbers.v1beta1.CreateNumberRequest.prototype.setAorLink = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional IngressInfo ingress_info = 4;
 * @return {?proto.fonoster.numbers.v1beta1.IngressInfo}
 */
proto.fonoster.numbers.v1beta1.CreateNumberRequest.prototype.getIngressInfo = function() {
  return /** @type{?proto.fonoster.numbers.v1beta1.IngressInfo} */ (
    jspb.Message.getWrapperField(this, proto.fonoster.numbers.v1beta1.IngressInfo, 4));
};


/**
 * @param {?proto.fonoster.numbers.v1beta1.IngressInfo|undefined} value
 * @return {!proto.fonoster.numbers.v1beta1.CreateNumberRequest} returns this
*/
proto.fonoster.numbers.v1beta1.CreateNumberRequest.prototype.setIngressInfo = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fonoster.numbers.v1beta1.CreateNumberRequest} returns this
 */
proto.fonoster.numbers.v1beta1.CreateNumberRequest.prototype.clearIngressInfo = function() {
  return this.setIngressInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fonoster.numbers.v1beta1.CreateNumberRequest.prototype.hasIngressInfo = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fonoster.numbers.v1beta1.UpdateNumberRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.fonoster.numbers.v1beta1.UpdateNumberRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fonoster.numbers.v1beta1.UpdateNumberRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.numbers.v1beta1.UpdateNumberRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    ref: jspb.Message.getFieldWithDefault(msg, 1, ""),
    aorLink: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ingressInfo: (f = msg.getIngressInfo()) && proto.fonoster.numbers.v1beta1.IngressInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fonoster.numbers.v1beta1.UpdateNumberRequest}
 */
proto.fonoster.numbers.v1beta1.UpdateNumberRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fonoster.numbers.v1beta1.UpdateNumberRequest;
  return proto.fonoster.numbers.v1beta1.UpdateNumberRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fonoster.numbers.v1beta1.UpdateNumberRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fonoster.numbers.v1beta1.UpdateNumberRequest}
 */
proto.fonoster.numbers.v1beta1.UpdateNumberRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRef(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAorLink(value);
      break;
    case 3:
      var value = new proto.fonoster.numbers.v1beta1.IngressInfo;
      reader.readMessage(value,proto.fonoster.numbers.v1beta1.IngressInfo.deserializeBinaryFromReader);
      msg.setIngressInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fonoster.numbers.v1beta1.UpdateNumberRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fonoster.numbers.v1beta1.UpdateNumberRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fonoster.numbers.v1beta1.UpdateNumberRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.numbers.v1beta1.UpdateNumberRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRef();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAorLink();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIngressInfo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.fonoster.numbers.v1beta1.IngressInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string ref = 1;
 * @return {string}
 */
proto.fonoster.numbers.v1beta1.UpdateNumberRequest.prototype.getRef = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.numbers.v1beta1.UpdateNumberRequest} returns this
 */
proto.fonoster.numbers.v1beta1.UpdateNumberRequest.prototype.setRef = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string aor_link = 2;
 * @return {string}
 */
proto.fonoster.numbers.v1beta1.UpdateNumberRequest.prototype.getAorLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.numbers.v1beta1.UpdateNumberRequest} returns this
 */
proto.fonoster.numbers.v1beta1.UpdateNumberRequest.prototype.setAorLink = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional IngressInfo ingress_info = 3;
 * @return {?proto.fonoster.numbers.v1beta1.IngressInfo}
 */
proto.fonoster.numbers.v1beta1.UpdateNumberRequest.prototype.getIngressInfo = function() {
  return /** @type{?proto.fonoster.numbers.v1beta1.IngressInfo} */ (
    jspb.Message.getWrapperField(this, proto.fonoster.numbers.v1beta1.IngressInfo, 3));
};


/**
 * @param {?proto.fonoster.numbers.v1beta1.IngressInfo|undefined} value
 * @return {!proto.fonoster.numbers.v1beta1.UpdateNumberRequest} returns this
*/
proto.fonoster.numbers.v1beta1.UpdateNumberRequest.prototype.setIngressInfo = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fonoster.numbers.v1beta1.UpdateNumberRequest} returns this
 */
proto.fonoster.numbers.v1beta1.UpdateNumberRequest.prototype.clearIngressInfo = function() {
  return this.setIngressInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fonoster.numbers.v1beta1.UpdateNumberRequest.prototype.hasIngressInfo = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fonoster.numbers.v1beta1.GetNumberRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.fonoster.numbers.v1beta1.GetNumberRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fonoster.numbers.v1beta1.GetNumberRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.numbers.v1beta1.GetNumberRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    ref: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fonoster.numbers.v1beta1.GetNumberRequest}
 */
proto.fonoster.numbers.v1beta1.GetNumberRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fonoster.numbers.v1beta1.GetNumberRequest;
  return proto.fonoster.numbers.v1beta1.GetNumberRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fonoster.numbers.v1beta1.GetNumberRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fonoster.numbers.v1beta1.GetNumberRequest}
 */
proto.fonoster.numbers.v1beta1.GetNumberRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fonoster.numbers.v1beta1.GetNumberRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fonoster.numbers.v1beta1.GetNumberRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fonoster.numbers.v1beta1.GetNumberRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.numbers.v1beta1.GetNumberRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRef();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string ref = 1;
 * @return {string}
 */
proto.fonoster.numbers.v1beta1.GetNumberRequest.prototype.getRef = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.numbers.v1beta1.GetNumberRequest} returns this
 */
proto.fonoster.numbers.v1beta1.GetNumberRequest.prototype.setRef = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fonoster.numbers.v1beta1.GetIngressInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.fonoster.numbers.v1beta1.GetIngressInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fonoster.numbers.v1beta1.GetIngressInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.numbers.v1beta1.GetIngressInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    e164Number: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fonoster.numbers.v1beta1.GetIngressInfoRequest}
 */
proto.fonoster.numbers.v1beta1.GetIngressInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fonoster.numbers.v1beta1.GetIngressInfoRequest;
  return proto.fonoster.numbers.v1beta1.GetIngressInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fonoster.numbers.v1beta1.GetIngressInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fonoster.numbers.v1beta1.GetIngressInfoRequest}
 */
proto.fonoster.numbers.v1beta1.GetIngressInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setE164Number(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fonoster.numbers.v1beta1.GetIngressInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fonoster.numbers.v1beta1.GetIngressInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fonoster.numbers.v1beta1.GetIngressInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.numbers.v1beta1.GetIngressInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getE164Number();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string e164_number = 1;
 * @return {string}
 */
proto.fonoster.numbers.v1beta1.GetIngressInfoRequest.prototype.getE164Number = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.numbers.v1beta1.GetIngressInfoRequest} returns this
 */
proto.fonoster.numbers.v1beta1.GetIngressInfoRequest.prototype.setE164Number = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fonoster.numbers.v1beta1.DeleteNumberRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.fonoster.numbers.v1beta1.DeleteNumberRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fonoster.numbers.v1beta1.DeleteNumberRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.numbers.v1beta1.DeleteNumberRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    ref: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fonoster.numbers.v1beta1.DeleteNumberRequest}
 */
proto.fonoster.numbers.v1beta1.DeleteNumberRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fonoster.numbers.v1beta1.DeleteNumberRequest;
  return proto.fonoster.numbers.v1beta1.DeleteNumberRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fonoster.numbers.v1beta1.DeleteNumberRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fonoster.numbers.v1beta1.DeleteNumberRequest}
 */
proto.fonoster.numbers.v1beta1.DeleteNumberRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fonoster.numbers.v1beta1.DeleteNumberRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fonoster.numbers.v1beta1.DeleteNumberRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fonoster.numbers.v1beta1.DeleteNumberRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.numbers.v1beta1.DeleteNumberRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRef();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string ref = 1;
 * @return {string}
 */
proto.fonoster.numbers.v1beta1.DeleteNumberRequest.prototype.getRef = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.numbers.v1beta1.DeleteNumberRequest} returns this
 */
proto.fonoster.numbers.v1beta1.DeleteNumberRequest.prototype.setRef = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fonoster.numbers.v1beta1.Number.prototype.toObject = function(opt_includeInstance) {
  return proto.fonoster.numbers.v1beta1.Number.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fonoster.numbers.v1beta1.Number} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.numbers.v1beta1.Number.toObject = function(includeInstance, msg) {
  var f, obj = {
    ref: jspb.Message.getFieldWithDefault(msg, 1, ""),
    providerRef: jspb.Message.getFieldWithDefault(msg, 2, ""),
    e164Number: jspb.Message.getFieldWithDefault(msg, 3, ""),
    aorLink: jspb.Message.getFieldWithDefault(msg, 4, ""),
    ingressInfo: (f = msg.getIngressInfo()) && proto.fonoster.numbers.v1beta1.IngressInfo.toObject(includeInstance, f),
    createTime: jspb.Message.getFieldWithDefault(msg, 6, ""),
    updateTime: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fonoster.numbers.v1beta1.Number}
 */
proto.fonoster.numbers.v1beta1.Number.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fonoster.numbers.v1beta1.Number;
  return proto.fonoster.numbers.v1beta1.Number.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fonoster.numbers.v1beta1.Number} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fonoster.numbers.v1beta1.Number}
 */
proto.fonoster.numbers.v1beta1.Number.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRef(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProviderRef(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setE164Number(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAorLink(value);
      break;
    case 5:
      var value = new proto.fonoster.numbers.v1beta1.IngressInfo;
      reader.readMessage(value,proto.fonoster.numbers.v1beta1.IngressInfo.deserializeBinaryFromReader);
      msg.setIngressInfo(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreateTime(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdateTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fonoster.numbers.v1beta1.Number.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fonoster.numbers.v1beta1.Number.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fonoster.numbers.v1beta1.Number} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.numbers.v1beta1.Number.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRef();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProviderRef();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getE164Number();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAorLink();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getIngressInfo();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.fonoster.numbers.v1beta1.IngressInfo.serializeBinaryToWriter
    );
  }
  f = message.getCreateTime();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getUpdateTime();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string ref = 1;
 * @return {string}
 */
proto.fonoster.numbers.v1beta1.Number.prototype.getRef = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.numbers.v1beta1.Number} returns this
 */
proto.fonoster.numbers.v1beta1.Number.prototype.setRef = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string provider_ref = 2;
 * @return {string}
 */
proto.fonoster.numbers.v1beta1.Number.prototype.getProviderRef = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.numbers.v1beta1.Number} returns this
 */
proto.fonoster.numbers.v1beta1.Number.prototype.setProviderRef = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string e164_number = 3;
 * @return {string}
 */
proto.fonoster.numbers.v1beta1.Number.prototype.getE164Number = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.numbers.v1beta1.Number} returns this
 */
proto.fonoster.numbers.v1beta1.Number.prototype.setE164Number = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string aor_link = 4;
 * @return {string}
 */
proto.fonoster.numbers.v1beta1.Number.prototype.getAorLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.numbers.v1beta1.Number} returns this
 */
proto.fonoster.numbers.v1beta1.Number.prototype.setAorLink = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional IngressInfo ingress_info = 5;
 * @return {?proto.fonoster.numbers.v1beta1.IngressInfo}
 */
proto.fonoster.numbers.v1beta1.Number.prototype.getIngressInfo = function() {
  return /** @type{?proto.fonoster.numbers.v1beta1.IngressInfo} */ (
    jspb.Message.getWrapperField(this, proto.fonoster.numbers.v1beta1.IngressInfo, 5));
};


/**
 * @param {?proto.fonoster.numbers.v1beta1.IngressInfo|undefined} value
 * @return {!proto.fonoster.numbers.v1beta1.Number} returns this
*/
proto.fonoster.numbers.v1beta1.Number.prototype.setIngressInfo = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fonoster.numbers.v1beta1.Number} returns this
 */
proto.fonoster.numbers.v1beta1.Number.prototype.clearIngressInfo = function() {
  return this.setIngressInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fonoster.numbers.v1beta1.Number.prototype.hasIngressInfo = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string create_time = 6;
 * @return {string}
 */
proto.fonoster.numbers.v1beta1.Number.prototype.getCreateTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.numbers.v1beta1.Number} returns this
 */
proto.fonoster.numbers.v1beta1.Number.prototype.setCreateTime = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string update_time = 7;
 * @return {string}
 */
proto.fonoster.numbers.v1beta1.Number.prototype.getUpdateTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.numbers.v1beta1.Number} returns this
 */
proto.fonoster.numbers.v1beta1.Number.prototype.setUpdateTime = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fonoster.numbers.v1beta1.IngressInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.fonoster.numbers.v1beta1.IngressInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fonoster.numbers.v1beta1.IngressInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.numbers.v1beta1.IngressInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    accessKeyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    webhook: jspb.Message.getFieldWithDefault(msg, 2, ""),
    appRef: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fonoster.numbers.v1beta1.IngressInfo}
 */
proto.fonoster.numbers.v1beta1.IngressInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fonoster.numbers.v1beta1.IngressInfo;
  return proto.fonoster.numbers.v1beta1.IngressInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fonoster.numbers.v1beta1.IngressInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fonoster.numbers.v1beta1.IngressInfo}
 */
proto.fonoster.numbers.v1beta1.IngressInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccessKeyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setWebhook(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fonoster.numbers.v1beta1.IngressInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fonoster.numbers.v1beta1.IngressInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fonoster.numbers.v1beta1.IngressInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fonoster.numbers.v1beta1.IngressInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccessKeyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getWebhook();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAppRef();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string access_key_id = 1;
 * @return {string}
 */
proto.fonoster.numbers.v1beta1.IngressInfo.prototype.getAccessKeyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.numbers.v1beta1.IngressInfo} returns this
 */
proto.fonoster.numbers.v1beta1.IngressInfo.prototype.setAccessKeyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string webhook = 2;
 * @return {string}
 */
proto.fonoster.numbers.v1beta1.IngressInfo.prototype.getWebhook = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.numbers.v1beta1.IngressInfo} returns this
 */
proto.fonoster.numbers.v1beta1.IngressInfo.prototype.setWebhook = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string app_ref = 3;
 * @return {string}
 */
proto.fonoster.numbers.v1beta1.IngressInfo.prototype.getAppRef = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.fonoster.numbers.v1beta1.IngressInfo} returns this
 */
proto.fonoster.numbers.v1beta1.IngressInfo.prototype.setAppRef = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


goog.object.extend(exports, proto.fonoster.numbers.v1beta1);
