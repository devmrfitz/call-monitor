version: "3"

services:

  webui:
    image: fonoster/webui:latest
    restart: unless-stopped
    environment:
      WEBUI_APISERVER_ENDPOINT: ${WEBUI_APISERVER_ENDPOINT}
      # TODO: Remove this deprecated variable
      APISERVER_ENDPOINT: ${WEBUI_APISERVER_ENDPOINT}
      WEBUI_GITHUB_CLIENT_ID: ${WEBUI_GITHUB_CLIENT_ID}
      WEBUI_GITHUB_CLIENT_SECRET: ${WEBUI_GITHUB_CLIENT_SECRET}
      WEBUI_TEST_PHONE_DOMAIN: ${WEBUI_TEST_PHONE_DOMAIN}
      WEBUI_TEST_PHONE_SERVER: ${WEBUI_TEST_PHONE_SERVER}
      WEBUI_TEST_PHONE_USERNAME: ${WEBUI_TEST_PHONE_USERNAME}
      WEBUI_TEST_PHONE_SECRET: ${WEBUI_TEST_PHONE_SECRET}
      WEBUI_TEST_PHONE_DISPLAY_NAME: ${WEBUI_TEST_PHONE_DISPLAY_NAME}
      WEBUI_BILLING_URL: ${WEBUI_BILLING_URL}
      WEBUI_FEEDBACK_URL: ${WEBUI_FEEDBACK_URL}
      WEBUI_APP_URL: ${WEBUI_APP_URL}
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      LOGS_LEVEL: ${LOGS_LEVEL}
      LOGS_TRANSPORT: ${LOGS_TRANSPORT}
      GRPC_ALLOW_INSECURE: true
    ports:
      - 8181:8181
    volumes:
      - ./etc/config:/home/nextjs/.fonoster/config:ro
      - ./etc/rbac.json:/home/fonoster/rbac.json:ro
    logging:
      options:
        tag: fonoster-logs

  apiserver:
    image: fonoster/apiserver:latest
    restart: unless-stopped
    environment:
      APISERVER_AUTOPILOT_URL: ${APISERVER_AUTOPILOT_URL}
      APISERVER_AUTOPILOT_MEDIA_BUSY_MESSAGE: ${APISERVER_AUTOPILOT_MEDIA_BUSY_MESSAGE}
      APISERVER_AUTOPILOT_MEDIA_NOANSWER_MESSAGE: ${APISERVER_AUTOPILOT_MEDIA_NOANSWER_MESSAGE}
      APISERVER_ENDPOINT: ${APISERVER_ENDPOINT}
      APISERVER_ROUTR_API_HOST: ${APISERVER_ROUTR_API_HOST}
      APISERVER_ROUTR_API_USERNAME: ${APISERVER_ROUTR_API_USERNAME}
      APISERVER_ROUTR_API_SECRET: ${APISERVER_ROUTR_API_SECRET}
      APISERVER_ROUTR_DEFAULT_PEER_USERNAME: ${APISERVER_ROUTR_DEFAULT_PEER_USERNAME}
      APISERVER_ROUTR_DEFAULT_PEER_SECRET: ${APISERVER_ROUTR_DEFAULT_PEER_SECRET}
      APISERVER_ASTERISK_ARI_INTERNAL_URL: ${APISERVER_ASTERISK_ARI_INTERNAL_URL}
      APISERVER_ASTERISK_ARI_USERNAME: ${APISERVER_ASTERISK_ARI_USERNAME}
      APISERVER_ASTERISK_ARI_SECRET: ${APISERVER_ASTERISK_ARI_SECRET}
      APISERVER_VAULT_ADDR: ${APISERVER_VAULT_ADDR}
      APISERVER_VAULT_TOKEN: ${APISERVER_VAULT_TOKEN}
      APISERVER_S3_SERVER_HOST: ${APISERVER_S3_SERVER_HOST}
      APISERVER_S3_SERVER_USERNAME: ${APISERVER_S3_SERVER_USERNAME}
      APISERVER_S3_SERVER_SECRET: ${APISERVER_S3_SERVER_SECRET}
      APISERVER_S3_SERVER_USE_SSL: ${APISERVER_S3_SERVER_USE_SSL}
      APISERVER_JWT_AUTH_ISS: ${APISERVER_JWT_AUTH_ISS}
      APISERVER_JWT_PRIVATE_KEY: ${APISERVER_JWT_PRIVATE_KEY}
      REDIS_HOST: ${APISERVER_REDIS_HOST}
      LOGS_LEVEL: ${LOGS_LEVEL}
      LOGS_TRANSPORT: ${LOGS_TRANSPORT}
      LOGS_DRIVER_HOST: ${LOGS_DRIVER_HOST}
      LOGS_AGGREGRATOR_HOST: ${LOGS_AGGREGRATOR_HOST}
      LOGS_AGGREGRATOR_PORT: 24224
      GRPC_ALLOW_INSECURE: true
    ports:
      - 50052:50052
      - 4000:4000
    expose:
      - 6445
    volumes:
      - ./etc/config:/home/fonoster/.fonoster/config:ro
      - ./etc/rbac.json:/home/fonoster/rbac.json:ro
    logging:
      options:
        tag: fonoster-logs

  routr:
    image: fonoster/routr:1.2.8
    restart: unless-stopped
    platform: linux/x86_64
    healthcheck:
      test: ["CMD", "curl", "-k", "--fail", "--silent", "--show-error", "--connect-timeout", "2", "-L", "https://localhost:4567/api/v1beta1/system/status"]
      interval: 60s
      timeout: 10s
      retries: 5
    environment:
      EXTERN_ADDR: ${DOCKER_HOST_ADDRESS}
      LOCALNETS: ${ROUTR_LOCALNETS}
      INITIAL_API_SECRET: ${ROUTR_INITIAL_API_SECRET}
      BIND_ADDR: ${ROUTR_BIND_ADDR}
      DATA_SOURCE_PROVIDER: ${ROUTR_DATA_SOURCE_PROVIDER}
      DATA_SOURCE_PARAMETERS: ${ROUTR_DATA_SOURCE_PARAMETERS}
      RECORD_ROUTE: ${ROUTR_RECORD_ROUTE}
      REGISTRAR_INTF: ${ROUTR_REGISTRAR_INTF}
      REST_SERVICE_MIN_THREADS: ${ROUTR_REST_SERVICE_MIN_THREADS}
      REST_SERVICE_MAX_THREADS: ${ROUTR_REST_SERVICE_MAX_THREADS}
      EX_RTP_ENGINE_ENABLED: ${ROUTR_RTPENGINE_ENABLED}
      EX_RTP_ENGINE_PROTO: ${ROUTR_RTPENGINE_PROTO}
      EX_RTP_ENGINE_HOST: ${ROUTR_RTPENGINE_HOST}
      EX_RTP_ENGINE_PORT: ${ROUTR_RTPENGINE_PORT}
      EX_CONVERT_TEL_TO_E164: ${ROUTR_CONVERT_TEL_TO_E164}
      LOGS_DRIVER_HOST: ${LOGS_DRIVER_HOST}
      LOGS_DRIVER_PORT: 24224
      JAVA_OPTS: ${ROUTR_JAVA_OPTS}
    expose:
      - 4567
    ports:
      - 5060-5063:5060-5063
      - 5060:5060/udp
    logging:
      options:
        tag: fonoster-logs
    volumes:
      - ./etc/log4j2.yml:/opt/routr/config/log4j2.yml:ro

  # RTPEngine uses a range of ports to handle RTP traffic. Because exposing a large range of ports 
  # is not possible in Docker, we need to use network_mode: host.
  #
  # Unfortunately, network_mode: host is not supported in Docker for Windows or Mac.
  # In those cases, we need to use a different approach.
  #
  # By default we are opening a small range of ports (10000-10100) to handle RTP traffic.
  # However, this is not enough for production environments.
  #
  # We recommend that when using Linux you use network_mode: host and remove the ports section.
  rtpengine:
    image: fonoster/rtpengine:latest
    restart: unless-stopped
    platform: linux/x86_64
    ports: 
      - 10000-10100:10000-10100/udp
      - 8080:8080
    environment:
      PUBLIC_IP: ${DOCKER_HOST_ADDRESS}
      PORT_MIN: 10000
      PORT_MAX: 10100

  asterisk:
    image: fonoster/asterisk:latest
    restart: unless-stopped
    environment:
      # TODO: Rename all the APISERVER_ variables to ASTERISK_
      APISERVER_RBAC_CONFIG: "/root/.fonoster/rbac.json"
      APISERVER_ENDPOINT: ${APISERVER_ENDPOINT}
      APISERVER_ROUTR_API_HOST: ${APISERVER_ROUTR_API_HOST}
      APISERVER_ROUTR_API_USERNAME: ${APISERVER_ROUTR_API_USERNAME}
      APISERVER_ROUTR_API_SECRET: ${APISERVER_ROUTR_API_SECRET}
      APISERVER_ROUTR_DEFAULT_PEER_USERNAME: ${APISERVER_ROUTR_DEFAULT_PEER_USERNAME}
      APISERVER_ROUTR_DEFAULT_PEER_SECRET: ${APISERVER_ROUTR_DEFAULT_PEER_SECRET}
      ARI_PROXY_URL: ${ASTERISK_ARI_PROXY_URL}
      ARI_USERNAME: ${ASTERISK_ARI_USERNAME}
      ARI_SECRET: ${ASTERISK_ARI_SECRET}
      EXTERN_ADDR: ${DOCKER_HOST_ADDRESS}
      SIPPROXY_HOST: ${ASTERISK_SIPPROXY_HOST}
      SIPPROXY_USERNAME: ${ASTERISK_SIPPROXY_USERNAME}
      SIPPROXY_SECRET: ${ASTERISK_SIPPROXY_SECRET}
      RTP_PORT_START: ${ASTERISK_RTP_PORT_START}
      RTP_PORT_END: ${ASTERISK_RTP_PORT_END}
      LOGS_LEVEL: ${LOGS_LEVEL}
      LOGS_DRIVER_HOST: ${LOGS_DRIVER_HOST}
      LOGS_TRANSPORT: ${LOGS_TRANSPORT}
      GRPC_ALLOW_INSECURE: true
    expose:
      - 6060
      - 8088
    volumes:
      - shared:/home/fonoster
      - ./etc/config:/root/.fonoster/config:ro
      - ./etc/rbac.json:/root/.fonoster/rbac.json:ro
    logging:
      options:
        tag: fonoster-logs

  redis:
    image: redis:7.0.8-alpine
    restart: unless-stopped
    expose:
      - 6379
    volumes:
      - shared:/data

  vault:
    image: vault:1.13.3
    container_name: vault
    entrypoint: vault server -config=/vault/config/vault.json   
    expose:
      - 8200
    volumes:
      - vault:/vault/file:rw
      - ./etc/vault.json:/vault/config/vault.json:ro
    cap_add:
      - IPC_LOCK

  fluent:
    image: fonoster/fluent:latest
    restart: unless-stopped
    platform: linux/x86_64
    expose:
      - 24224
    volumes:
      - ./etc/fluent.conf:/fluentd/etc/fluent.conf:ro

  elasticsearch:
    image: elasticsearch:7.16.3
    restart: unless-stopped
    platform: linux/x86_64
    environment:
      - "discovery.type=single-node"
    expose:
      - 9200
    volumes:
      - shared:/usr/share/elasticsearch/data:rw

  minio:
    image: bitnami/minio:2023.12.9
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${APISERVER_S3_SERVER_USERNAME}
      MINIO_ROOT_PASSWORD: ${APISERVER_S3_SERVER_SECRET}
      MINIO_DEFAULT_BUCKETS: apps:download,recordings:download,public:public
    expose:
      - 9000
    volumes:
      - shared:/bitnami/data/minio:rw

volumes:
  shared:
  vault:
