"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.assertValidURL = exports.assertNotEmpty = exports.assertValidEmail = void 0;
/*
 * Copyright (C) 2023 by Fonoster Inc (https://fonoster.com)
 * http://github.com/fonoster/fonoster
 *
 * This file is part of Fonoster
 *
 * Licensed under the MIT License (the "License");
 * you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 *    https://opensource.org/licenses/MIT
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const errors_1 = require("@fonoster/errors");
const assertValidEmail = (email) => {
    if (/\S+@\S+\.\S+/.test(email) == false)
        throw new errors_1.FonosterError(`invalid email: ${email}`, errors_1.ErrorCodes.INVALID_ARGUMENT);
};
exports.assertValidEmail = assertValidEmail;
// TODO: Move to @fonoster/common
const assertNotEmpty = (name, value) => {
    if (value.length == 0)
        throw new errors_1.FonosterError(`the parameter '${name}' is required but was not found`, errors_1.ErrorCodes.INVALID_ARGUMENT);
};
exports.assertNotEmpty = assertNotEmpty;
const assertValidURL = (url) => {
    if (url &&
        /(http(s)?:\/\/.)?(www\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_+.~#?&//=]*)/g.test(url) == false) {
        throw new errors_1.FonosterError(`invalid url: ${url}`, errors_1.ErrorCodes.INVALID_ARGUMENT);
    }
};
exports.assertValidURL = assertValidURL;
