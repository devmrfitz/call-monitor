import * as grpc from "@grpc/grpc-js";
import ProjectsPB, { ListProjectsRequest, ListProjectsResponse, CreateProjectRequest, UpdateProjectRequest, GetProjectRequest, DeleteProjectRequest, RenewAccessKeySecretRequest, RenewAccessKeySecretResponse } from "./protos/projects_pb";
import { IProjectsService, ProjectsService, IProjectsServer } from "./protos/projects_grpc_pb";
import { Empty } from "./protos/common_pb";
declare class ProjectsServer implements IProjectsServer {
    [name: string]: grpc.UntypedHandleCall;
    createProject(call: grpc.ServerUnaryCall<CreateProjectRequest, ProjectsPB.Project>, callback: grpc.sendUnaryData<ProjectsPB.Project>): Promise<void>;
    updateProject(call: grpc.ServerUnaryCall<UpdateProjectRequest, ProjectsPB.Project>, callback: grpc.sendUnaryData<ProjectsPB.Project>): Promise<void>;
    getProject(call: grpc.ServerUnaryCall<GetProjectRequest, ProjectsPB.Project>, callback: grpc.sendUnaryData<ProjectsPB.Project>): Promise<void>;
    deleteProject(call: grpc.ServerUnaryCall<DeleteProjectRequest, Empty>, callback: grpc.sendUnaryData<Empty>): Promise<void>;
    listProjects(call: grpc.ServerUnaryCall<ListProjectsRequest, ListProjectsResponse>, callback: grpc.sendUnaryData<ListProjectsResponse>): Promise<void>;
    renewAccessKeySecret(call: grpc.ServerUnaryCall<RenewAccessKeySecretRequest, RenewAccessKeySecretResponse>, callback: grpc.sendUnaryData<RenewAccessKeySecretResponse>): Promise<void>;
}
export { ProjectsServer as default, IProjectsService, ProjectsService };
