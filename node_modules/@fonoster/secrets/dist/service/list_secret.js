"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/*
 * Copyright (C) 2023 by Fonoster Inc (https://fonoster.com)
 * http://github.com/fonoster/fonoster
 *
 * This file is part of Fonoster
 *
 * Licensed under the MIT License (the "License");
 * you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 *    https://opensource.org/licenses/MIT
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const env_1 = require("../env");
const token_1 = __importDefault(require("./token"));
const node_vault_1 = __importDefault(require("node-vault"));
async function default_1(pageToken, pageSize, accessKeyId) {
    if (!pageToken)
        return {};
    pageToken--;
    pageSize--;
    const upperRange = pageToken + pageSize;
    const vault = (0, node_vault_1.default)({
        endpoint: env_1.APISERVER_VAULT_ADDR,
        token: env_1.APISERVER_VAULT_TOKEN
    });
    const entityId = await (0, token_1.default)(accessKeyId);
    const secretFromVault = await vault.list(`secret/data/${entityId}/`);
    const keys = secretFromVault.data.keys;
    const secrets = [];
    for (const index in keys) {
        secrets.push(keys[index]);
    }
    return {
        secrets,
        pageToken: upperRange + 1
    };
}
exports.default = default_1;
