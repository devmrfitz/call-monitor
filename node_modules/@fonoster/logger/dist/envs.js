"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.fluent = exports.transports = exports.level = exports.format = void 0;
/*
 * Copyright (C) 2022 by Fonoster Inc (https://fonoster.com)
 * http://github.com/fonoster/fonoster
 *
 * This file is part of Fonoster
 *
 * Licensed under the MIT License (the "License");
 * you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 *    https://opensource.org/licenses/MIT
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const winston_1 = __importDefault(require("winston"));
const fluent_logger_1 = __importDefault(require("fluent-logger"));
const fluentTransport = fluent_logger_1.default.support.winstonTransport();
const fluent = new fluentTransport(`${process.env.LOG_OPT_TAG_PREFIX}.fonoster`, {
    host: process.env.LOGS_DRIVER_HOST,
    port: process.env.LOGS_DRIVER_PORT,
    timeout: 3.0,
    requireAckResponse: true
});
exports.fluent = fluent;
const format = process.env.LOGS_FORMAT === "json"
    ? winston_1.default.format.combine(winston_1.default.format.timestamp(), winston_1.default.format.json())
    : winston_1.default.format.combine(winston_1.default.format.colorize(), winston_1.default.format.simple());
exports.format = format;
const level = process.env.LOGS_LEVEL ? process.env.LOGS_LEVEL : "info";
exports.level = level;
const transports = process.env.LOGS_TRANSPORT === "fluent"
    ? [fluent]
    : [new winston_1.default.transports.Console()];
exports.transports = transports;
