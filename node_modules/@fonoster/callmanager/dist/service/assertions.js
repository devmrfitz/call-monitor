"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.assertWebhookIsURL = exports.assertIsE164 = exports.assertCompatibleParameters = void 0;
const errors_1 = require("@fonoster/errors");
const phone_1 = __importDefault(require("phone"));
const assertCompatibleParameters = (request) => {
    if (request.getWebhook() && request.getAppRef()) {
        throw new errors_1.FonosterInvalidArgument("webhook and appRef cannot be used together");
    }
};
exports.assertCompatibleParameters = assertCompatibleParameters;
const isValidURL = (value) => /^(?:\w+:)?\/\/([^\s\.]+\.\S{2}|localhost[\:?\d]*)\S*$/.test(value);
const assertIsE164 = (number, field) => {
    if (!(0, phone_1.default)(number).isValid) {
        throw new errors_1.FonosterInvalidArgument(`field "${field}" must be a valid e164 value.`);
    }
};
exports.assertIsE164 = assertIsE164;
const assertWebhookIsURL = (webhook) => {
    if (webhook && !isValidURL(webhook)) {
        throw new errors_1.FonosterInvalidArgument("webhook field must be a valid URL.");
    }
};
exports.assertWebhookIsURL = assertWebhookIsURL;
