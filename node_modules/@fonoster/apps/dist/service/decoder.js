"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/*
 * Copyright (C) 2023 by Fonoster Inc (https://fonoster.com)
 * http://github.com/fonoster/fonoster
 *
 * This file is part of Fonoster
 *
 * Licensed under the MIT License (the "License");
 * you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 *    https://opensource.org/licenses/MIT
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const struct_pb_1 = require("google-protobuf/google/protobuf/struct_pb");
const apps_1 = require("../client/apps");
const apps_pb_1 = require("./protos/apps_pb");
exports.default = (raw) => {
    const appJSON = JSON.parse(raw);
    const app = new apps_pb_1.App();
    const transferConfig = new apps_1.AppsPB.TransferConfig();
    transferConfig.setMessage(appJSON?.transferConfig?.message);
    transferConfig.setMessageBusy(appJSON?.transferConfig?.messageBusy);
    transferConfig.setMessageNoAnswer(appJSON?.transferConfig?.messageNoAnswer);
    app.setRef(appJSON.ref);
    app.setAccessKeyId(appJSON.accessKeyId);
    app.setInitialDtmf(appJSON.initialDtmf);
    app.setActivationIntentId(appJSON.activationIntentId);
    app.setActivationTimeout(appJSON.activationTimeout);
    app.setInteractionTimeout(appJSON.interactionTimeout);
    app.setEnableEvents(appJSON.enableEvents);
    app.setTransferConfig(transferConfig);
    app.setIntentsEngineConfig(struct_pb_1.Struct.fromJavaScript(appJSON.intentsEngineConfig));
    app.setSpeechConfig(struct_pb_1.Struct.fromJavaScript(appJSON.speechConfig));
    app.setName(appJSON.name);
    app.setUpdateTime(appJSON.updateTime);
    app.setCreateTime(appJSON.createTime);
    return app;
};
