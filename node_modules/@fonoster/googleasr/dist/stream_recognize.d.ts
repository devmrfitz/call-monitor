/// <reference types="node" />
import { GoogleSpeechConfig } from "./types";
export default class StreamRecognize {
    speechClient: any;
    request: {
        config: GoogleSpeechConfig;
        interimResults: boolean;
    };
    recognizeStream: any;
    restartCounter: number;
    audioInput: any[];
    lastAudioInput: any[];
    resultEndTime: number;
    isFinalEndTime: number;
    finalRequestEndTime: number;
    newStream: boolean;
    bridgingOffset: number;
    lastTranscriptWasFinal: boolean;
    streamingLimit: number;
    audioInputStreamTransform: any;
    transcriptCallback: any;
    resultsCallback: any;
    socket: any;
    cb: (stream: any) => void;
    currentTimer: NodeJS.Timeout;
    constructor(config: GoogleSpeechConfig, socket: any, transcriptCallback: any, resultsCallback: any);
    startStream(): void;
    speechCallback(stream: any): any;
    transformer(chunk: any, encoding: any, callback: any): void;
    restartStream(): void;
    stop(): void;
}
