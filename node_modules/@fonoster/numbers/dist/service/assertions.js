"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.assertCompatibleParameters = exports.assertHasAorLinkOrIngressInfo = exports.assertWebhookIsURL = exports.assertIsE164 = void 0;
const errors_1 = require("@fonoster/errors");
const phone_1 = require("phone");
const isValidURL = (value) => /^(?:\w+:)?\/\/([^\s\.]+\.\S{2}|localhost[\:?\d]*)\S*$/.test(value);
const assertIsE164 = (number) => {
    const validatedPhone = (0, phone_1.phone)(number, { validateMobilePrefix: false });
    if (!validatedPhone.isValid) {
        throw new errors_1.FonosterInvalidArgument("e164Number field must be a valid e164 value.");
    }
    return validatedPhone.phoneNumber;
};
exports.assertIsE164 = assertIsE164;
const assertWebhookIsURL = (webhook) => {
    if (webhook && !isValidURL(webhook)) {
        throw new errors_1.FonosterInvalidArgument("webhook field must be a valid URL.");
    }
};
exports.assertWebhookIsURL = assertWebhookIsURL;
const assertHasAorLinkOrIngressInfo = (request) => {
    if (!request.getAorLink() &&
        !request.getIngressInfo()?.getWebhook() &&
        !request.getIngressInfo()?.getAppRef()) {
        throw new errors_1.FonosterInvalidArgument("You must provide either a 'webhook', 'appRef', or an 'aorLink'");
    }
};
exports.assertHasAorLinkOrIngressInfo = assertHasAorLinkOrIngressInfo;
const assertCompatibleParameters = (request) => {
    const aorLinkAndIngressInfo = request.getAorLink() && request.getIngressInfo();
    //const webhookAndAppRef = request.getIngressInfo()?.getAppRef() && request.getIngressInfo()?.getWebhook();
    if (aorLinkAndIngressInfo /*|| webhookAndAppRef*/) {
        throw new errors_1.FonosterInvalidArgument("you might provide only one of the following 'aorLink', 'webhook', or 'appRef'");
    }
};
exports.assertCompatibleParameters = assertCompatibleParameters;
