/**
 * Uses the input text and options to generate a filename. This is
 * later used to cache a file generated by a TTS engine.
 *
 * @param {string} - the text to synthesize
 * @param {object} - json object with configuration for the TTS engine
 * @param {sting} - resulting format. Defaults to '.wav'
 * @returns {string} compute filename
 */
declare const computeFilename: (text: string, options?: any, format?: string) => string;
/**
 * Takes a json object and creates a query formatted string
 *
 * @param {object} - a one level json object with the synth options
 * @returns {string} a string with the format like 'key=value&'
 */
declare const optionsToQueryString: (obj: any) => string;
/**
 * Gets the path to a file as input and transcode to
 * a new format compatible with Asterisk
 *
 * @param {string} fileIn - path to original file which is expected to be .wav
 * @param {string} fileOut - path resulting file in a format understod by asterisk
 * @returns {Promise<string>} path to the resulting file
 */
declare const transcode: (fileIn: string, fileOut: string) => Promise<string>;
export { computeFilename, transcode, optionsToQueryString };
