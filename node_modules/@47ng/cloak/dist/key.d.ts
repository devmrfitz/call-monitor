export declare const FINGERPRINT_LENGTH = 8;
export declare const cloakKeyRegex: RegExp;
/**
 * Serialized representation of a Cloak key.
 *
 * Suported key formats:
 *
 * ## Version 1
 * Text format: `k1.{algo}.{rawKey}`
 * - `algo`   : Only `aesgcm256` is supported (AES-GCM with a 256 bit key).
 * - `rawKey` : base64url-encoded raw export of the WebCrypto key.
 */
export declare type CloakKey = string;
export interface ParsedCloakKey {
    raw: Uint8Array | CryptoKey;
    fingerprint: string;
}
export declare function formatKey(raw: Uint8Array): string;
export declare function parseKey(key: CloakKey, usage?: 'encrypt' | 'decrypt'): Promise<ParsedCloakKey>;
/**
 * Sync version of parseKey, only available for Node.js
 */
export declare function parseKeySync(key: CloakKey): ParsedCloakKey;
export declare function serializeKey(key: ParsedCloakKey): Promise<CloakKey>;
/**
 * Generate an AES-GCM 256 bit serialized key.
 */
export declare function generateKey(): CloakKey;
/**
 * Serialize a WebCrypto key into a compact text format.
 *
 * @param key - An exportable WebCrypto key
 */
export declare function exportCryptoKey(key: CryptoKey): Promise<CloakKey>;
/**
 * Internal method: de-serialize a Cloak key into a WebCrypto key.
 * Note that the imported key cannot be re-exported, to limit leakage.
 *
 * @param key - Serialized Cloak key
 * @param usage - What the key is for (encryption or decryption)
 */
export declare function importKey(key: CloakKey, usage?: 'encrypt' | 'decrypt'): Promise<CryptoKey | Uint8Array>;
/**
 * Internal method: de-serialize a Cloak key into an Uint8Array.
 *
 * Available only on Node.js
 *
 * @param key - Serialized Cloak key
 */
export declare function importKeySync(key: CloakKey): Uint8Array;
/**
 * Internal method: calculate a key fingerprint
 * Fingerprint is the first 8 bytes of the SHA-256 of the
 * serialized key text, represented as an hexadecimal string.
 */
export declare function getKeyFingerprint(key: CloakKey): Promise<string>;
/**
 * Internal method: calculate a key fingerprint
 * Fingerprint is the first 8 bytes of the SHA-256 of the
 * serialized key text, represented as an hexadecimal string.
 */
export declare function getKeyFingerprintSync(key: CloakKey): string;
