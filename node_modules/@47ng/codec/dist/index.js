"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.detectEncoding = exports.decoders = exports.encoders = exports.hexToUTF8 = exports.utf8ToHex = exports.base64toUTF8 = exports.utf8ToBase64 = exports.base64ToHex = exports.hexToBase64url = exports.utf8 = exports.b64 = exports.hex = void 0;
const b64_1 = __importDefault(require("./b64"));
exports.b64 = b64_1.default;
const hex_1 = __importDefault(require("./hex"));
exports.hex = hex_1.default;
const utf8_1 = __importDefault(require("./utf8"));
exports.utf8 = utf8_1.default;
// --
function hexToBase64url(input) {
    return b64_1.default.encode(hex_1.default.decode(input));
}
exports.hexToBase64url = hexToBase64url;
function base64ToHex(base64) {
    return hex_1.default.encode(b64_1.default.decode(base64));
}
exports.base64ToHex = base64ToHex;
function utf8ToBase64(input) {
    return b64_1.default.encode(utf8_1.default.encode(input));
}
exports.utf8ToBase64 = utf8ToBase64;
function base64toUTF8(input) {
    return utf8_1.default.decode(b64_1.default.decode(input));
}
exports.base64toUTF8 = base64toUTF8;
function utf8ToHex(input) {
    return hex_1.default.encode(utf8_1.default.encode(input));
}
exports.utf8ToHex = utf8ToHex;
function hexToUTF8(input) {
    return utf8_1.default.decode(hex_1.default.decode(input));
}
exports.hexToUTF8 = hexToUTF8;
exports.encoders = {
    base64: b64_1.default.encode,
    utf8: utf8_1.default.decode,
    hex: hex_1.default.encode
};
exports.decoders = {
    base64: b64_1.default.decode,
    utf8: utf8_1.default.encode,
    hex: hex_1.default.decode
};
function detectEncoding(input) {
    const hex = /^[\dabcdef]+$/i;
    const b64 = /^[a-z0-9+/]+[=]{0,2}$/i; // RFC3548 Section 3 (uses +/)
    const b64url = /^[\w\-]+[=]{0,2}$/; // // RFC3548 Section 4 (uses -_)
    if (hex.test(input)) {
        return 'hex';
    }
    if (b64url.test(input) || b64.test(input)) {
        return 'base64';
    }
    return 'utf8';
}
exports.detectEncoding = detectEncoding;
